name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set Up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package

    - name: Build Docker Image
      run: docker build -t my-spring-boot-app .

    - name: Deploy to Remote Docker
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        scp -o StrictHostKeyChecking=no -i private_key.pem target/spring-boot-ms-sql-1.0-SNAPSHOT.war "$DOCKER_USERNAME"@"$DOCKER_HOST":/home/"$DOCKER_USERNAME"/
        ssh -o StrictHostKeyChecking=no -i private_key.pem "$DOCKER_USERNAME"@"$DOCKER_HOST" "docker build -t spring-boot-ms-sql ."
        ssh -o StrictHostKeyChecking=no -i private_key.pem "$DOCKER_USERNAME"@"$DOCKER_HOST" "docker stop spring-boot-ms-sql || true"
        ssh -o StrictHostKeyChecking=no -i private_key.pem "$DOCKER_USERNAME"@"$DOCKER_HOST" "docker run -d --name spring-boot-ms-sql -p 8080:8080 spring-boot-ms-sql"
